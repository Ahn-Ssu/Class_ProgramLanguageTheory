(define (bound-ids pwae)
  (type-case PWAE pwae
    [num (n) '()]
    [op (op-n) '()]
    [id (s) (list s)]
    [postfix (l r op) (checkDuplication (bound-ids l) (bound-ids r))]
    [substitute (i v e k) (append (checker v i) (bound-ids e))] ;  (if(eq? i (bound-ids e)) i (checker e i))
    [else '()]
    ) 
  )
(define (checker theExp bindingID)
  (cond
    [(empty? theExp) '()]
    [(PWAE? theExp)
     (if (eq? bindingID (first (bound-ids theExp)))
         (list bindingID)
         (checker (rest (bound-ids theExp)) bindingID))]
    [else
     (if (eq? bindingID (first theExp))
         (list bindingID)
         (checker (rest theExp) bindingID))
     ]
    )
  )

(substitute 'x (num 3) (postfix (id 'x) (substitute 'y (num 7) (postfix (id 'x) (id 'y) (op 'sub)) (keyword 'with)) (op 'add)) (keyword 'with))
; i x ->
(postfix (id 'x) (substitute 'y (num 7) (postfix (id 'x) (id 'y) (op 'sub)) (keyword 'with)) (op 'add))
; post -> 'x + sub 
(substitute 'y (num 7) (postfix (id 'x) (id 'y) (op 'sub)) (keyword 'with))
(test (bound-ids (substitute 'y (num 7) (postfix (id 'x) (id 'y) (op 'sub)) (keyword 'with)) )'())
; i2 y -> 
(postfix (id 'x) (id 'y) (op 'sub))
; x + y
; y 탐지 